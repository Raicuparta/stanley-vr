//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Pose p_default_Pointer;
        
        private static SteamVR_Action_Boolean p_default_Recenter;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Boolean p_dominant_hand_Interact;
        
        private static SteamVR_Action_Boolean p_dominant_hand_MenuTabRight;
        
        private static SteamVR_Action_Boolean p_dominant_hand_MenuTabLeft;
        
        private static SteamVR_Action_Boolean p_dominant_hand_MenuInteract;
        
        private static SteamVR_Action_Boolean p_non_dominant_hand_Crouch;
        
        private static SteamVR_Action_Boolean p_non_dominant_hand_Menu;
        
        private static SteamVR_Action_Vector2 p_non_dominant_hand_MenuDirection;
        
        private static SteamVR_Action_Vector2 p_movement_hand_Move;
        
        private static SteamVR_Action_Boolean p_movement_hand_Teleport;
        
        private static SteamVR_Action_Boolean p_rotation_hand_Jump;
        
        private static SteamVR_Action_Vector2 p_rotation_hand_Rotate;
        
        private static SteamVR_Action_Boolean p_rotation_hand_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_rotation_hand_SnapTurnRight;
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pointer
        {
            get
            {
                return SteamVR_Actions.p_default_Pointer.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Recenter
        {
            get
            {
                return SteamVR_Actions.p_default_Recenter.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean dominant_hand_Interact
        {
            get
            {
                return SteamVR_Actions.p_dominant_hand_Interact.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean dominant_hand_MenuTabRight
        {
            get
            {
                return SteamVR_Actions.p_dominant_hand_MenuTabRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean dominant_hand_MenuTabLeft
        {
            get
            {
                return SteamVR_Actions.p_dominant_hand_MenuTabLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean dominant_hand_MenuInteract
        {
            get
            {
                return SteamVR_Actions.p_dominant_hand_MenuInteract.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean non_dominant_hand_Crouch
        {
            get
            {
                return SteamVR_Actions.p_non_dominant_hand_Crouch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean non_dominant_hand_Menu
        {
            get
            {
                return SteamVR_Actions.p_non_dominant_hand_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 non_dominant_hand_MenuDirection
        {
            get
            {
                return SteamVR_Actions.p_non_dominant_hand_MenuDirection.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 movement_hand_Move
        {
            get
            {
                return SteamVR_Actions.p_movement_hand_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean movement_hand_Teleport
        {
            get
            {
                return SteamVR_Actions.p_movement_hand_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rotation_hand_Jump
        {
            get
            {
                return SteamVR_Actions.p_rotation_hand_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 rotation_hand_Rotate
        {
            get
            {
                return SteamVR_Actions.p_rotation_hand_Rotate.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean rotation_hand_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_rotation_hand_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean rotation_hand_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_rotation_hand_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Pointer,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.dominant_hand_Interact,
                    SteamVR_Actions.dominant_hand_MenuTabRight,
                    SteamVR_Actions.dominant_hand_MenuTabLeft,
                    SteamVR_Actions.dominant_hand_MenuInteract,
                    SteamVR_Actions.non_dominant_hand_Crouch,
                    SteamVR_Actions.non_dominant_hand_Menu,
                    SteamVR_Actions.non_dominant_hand_MenuDirection,
                    SteamVR_Actions.movement_hand_Move,
                    SteamVR_Actions.movement_hand_Teleport,
                    SteamVR_Actions.rotation_hand_Jump,
                    SteamVR_Actions.rotation_hand_Rotate,
                    SteamVR_Actions.rotation_hand_SnapTurnLeft,
                    SteamVR_Actions.rotation_hand_SnapTurnRight};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Pointer,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.dominant_hand_Interact,
                    SteamVR_Actions.dominant_hand_MenuTabRight,
                    SteamVR_Actions.dominant_hand_MenuTabLeft,
                    SteamVR_Actions.dominant_hand_MenuInteract,
                    SteamVR_Actions.non_dominant_hand_Crouch,
                    SteamVR_Actions.non_dominant_hand_Menu,
                    SteamVR_Actions.non_dominant_hand_MenuDirection,
                    SteamVR_Actions.movement_hand_Move,
                    SteamVR_Actions.movement_hand_Teleport,
                    SteamVR_Actions.rotation_hand_Jump,
                    SteamVR_Actions.rotation_hand_Rotate,
                    SteamVR_Actions.rotation_hand_SnapTurnLeft,
                    SteamVR_Actions.rotation_hand_SnapTurnRight};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_Pointer};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.dominant_hand_Interact,
                    SteamVR_Actions.dominant_hand_MenuTabRight,
                    SteamVR_Actions.dominant_hand_MenuTabLeft,
                    SteamVR_Actions.dominant_hand_MenuInteract,
                    SteamVR_Actions.non_dominant_hand_Crouch,
                    SteamVR_Actions.non_dominant_hand_Menu,
                    SteamVR_Actions.movement_hand_Teleport,
                    SteamVR_Actions.rotation_hand_Jump,
                    SteamVR_Actions.rotation_hand_SnapTurnLeft,
                    SteamVR_Actions.rotation_hand_SnapTurnRight};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.non_dominant_hand_MenuDirection,
                    SteamVR_Actions.movement_hand_Move,
                    SteamVR_Actions.rotation_hand_Rotate};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Recenter,
                    SteamVR_Actions.dominant_hand_Interact,
                    SteamVR_Actions.dominant_hand_MenuTabRight,
                    SteamVR_Actions.dominant_hand_MenuTabLeft,
                    SteamVR_Actions.dominant_hand_MenuInteract,
                    SteamVR_Actions.non_dominant_hand_Crouch,
                    SteamVR_Actions.non_dominant_hand_Menu,
                    SteamVR_Actions.non_dominant_hand_MenuDirection,
                    SteamVR_Actions.movement_hand_Move,
                    SteamVR_Actions.movement_hand_Teleport,
                    SteamVR_Actions.rotation_hand_Jump,
                    SteamVR_Actions.rotation_hand_Rotate,
                    SteamVR_Actions.rotation_hand_SnapTurnLeft,
                    SteamVR_Actions.rotation_hand_SnapTurnRight};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_Pointer = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pointer")));
            SteamVR_Actions.p_default_Recenter = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Recenter")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_dominant_hand_Interact = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/dominant_hand/in/Interact")));
            SteamVR_Actions.p_dominant_hand_MenuTabRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/dominant_hand/in/MenuTabRight")));
            SteamVR_Actions.p_dominant_hand_MenuTabLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/dominant_hand/in/MenuTabLeft")));
            SteamVR_Actions.p_dominant_hand_MenuInteract = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/dominant_hand/in/MenuInteract")));
            SteamVR_Actions.p_non_dominant_hand_Crouch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/non_dominant_hand/in/Crouch")));
            SteamVR_Actions.p_non_dominant_hand_Menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/non_dominant_hand/in/Menu")));
            SteamVR_Actions.p_non_dominant_hand_MenuDirection = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/non_dominant_hand/in/MenuDirection")));
            SteamVR_Actions.p_movement_hand_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/movement_hand/in/Move")));
            SteamVR_Actions.p_movement_hand_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/movement_hand/in/Teleport")));
            SteamVR_Actions.p_rotation_hand_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rotation_hand/in/Jump")));
            SteamVR_Actions.p_rotation_hand_Rotate = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/rotation_hand/in/Rotate")));
            SteamVR_Actions.p_rotation_hand_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rotation_hand/in/SnapTurnLeft")));
            SteamVR_Actions.p_rotation_hand_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/rotation_hand/in/SnapTurnRight")));
        }
    }
}
